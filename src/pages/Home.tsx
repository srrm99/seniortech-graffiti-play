import { useNavigate } from "react-router-dom";
import { Card } from "@/components/ui/card";
import { useUserPreferences } from "@/contexts/UserPreferencesContext";
import { Book, GamepadIcon, HeartHandshake, Search } from "lucide-react";
import { motion } from "framer-motion";
import { toast } from "@/components/ui/use-toast";
import { useEffect } from "react";

const menuItems = {
  english: [
    {
      Icon: GamepadIcon,
      title: "Brain Games",
      description: "Fun and simple games to keep your mind active",
      path: "/games",
      gradient: "from-orange-400 to-pink-500",
      tooltip: "Exercise your brain with enjoyable puzzles"
    },
    {
      Icon: HeartHandshake,
      title: "Friendly Chat",
      description: "Have a warm conversation with a caring companion",
      path: "/companions/english",
      gradient: "from-purple-400 to-blue-500",
      tooltip: "Someone is always here to listen and talk with you"
    },
    {
      Icon: Book,
      title: "Daily Stories",
      description: "Short, inspiring readings for your day",
      path: "/readings/english",
      gradient: "from-green-400 to-teal-500",
      tooltip: "Enjoy uplifting stories and wisdom"
    },
    {
      Icon: Search,
      title: "Ask Anything",
      description: "Get information about news, government schemes, or any topic",
      path: "/info-assistant",
      gradient: "from-yellow-400 to-orange-500",
      tooltip: "Learn about latest news, helpful schemes, or ask any question"
    }
  ],
  hindi: [
    {
      Icon: GamepadIcon,
      title: "рджрд┐рдорд╛рдЧреА рдЦреЗрд▓",
      description: "рджрд┐рдорд╛рдЧ рдХреЛ рд╕рдХреНрд░рд┐рдп рд░рдЦрдиреЗ рдХреЗ рд▓рд┐рдП рдордЬрд╝реЗрджрд╛рд░ рдФрд░ рд╕рд░рд▓ рдЦреЗрд▓",
      path: "/games",
      gradient: "from-orange-400 to-pink-500",
      tooltip: "рдордиреЛрд░рдВрдЬрдХ рдкрд╣реЗрд▓рд┐рдпреЛрдВ рдХреЗ рд╕рд╛рде рдЕрдкрдиреЗ рджрд┐рдорд╛рдЧ рдХрд╛ рд╡реНрдпрд╛рдпрд╛рдо рдХрд░реЗрдВ"
    },
    {
      Icon: HeartHandshake,
      title: "рджреЛрд╕реНрддрд╛рдирд╛ рдмрд╛рддрдЪреАрдд",
      description: "рдПрдХ рджреЗрдЦрднрд╛рд▓ рдХрд░рдиреЗ рд╡рд╛рд▓реЗ рд╕рд╛рдереА рдХреЗ рд╕рд╛рде рдЧрд░реНрдордЬреЛрд╢реА рднрд░реА рдмрд╛рддрдЪреАрдд рдХрд░реЗрдВ",
      path: "/companions/hindi",
      gradient: "from-purple-400 to-blue-500",
      tooltip: "рдХреЛрдИ рди рдХреЛрдИ рд╣рдореЗрд╢рд╛ рдЖрдкрдХреА рдмрд╛рдд рд╕реБрдирдиреЗ рдХреЗ рд▓рд┐рдП рдореМрдЬреВрдж рд╣реИ"
    },
    {
      Icon: Book,
      title: "рджреИрдирд┐рдХ рдХрд╣рд╛рдирд┐рдпрд╛рдВ",
      description: "рдЖрдкрдХреЗ рджрд┐рди рдХреЗ рд▓рд┐рдП рдЫреЛрдЯреА, рдкреНрд░реЗрд░рдгрд╛рджрд╛рдпрдХ рдХрд╣рд╛рдирд┐рдпрд╛рдВ",
      path: "/readings/hindi",
      gradient: "from-green-400 to-teal-500",
      tooltip: "рдкреНрд░реЗрд░рдгрд╛рджрд╛рдпрдХ рдХрд╣рд╛рдирд┐рдпреЛрдВ рдФрд░ рдЬреНрдЮрд╛рди рдХрд╛ рдЖрдирдВрдж рд▓реЗрдВ"
    },
    {
      Icon: Search,
      title: "рдХреБрдЫ рднреА рдкреВрдЫреЗрдВ",
      description: "рд╕рдорд╛рдЪрд╛рд░, рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛рдУрдВ рдпрд╛ рдХрд┐рд╕реА рднреА рд╡рд┐рд╖рдп рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдирдХрд╛рд░реА рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ",
      path: "/info-assistant",
      gradient: "from-yellow-400 to-orange-500",
      tooltip: "рдирд╡реАрдирддрдо рд╕рдорд╛рдЪрд╛рд░, рд╕рд╣рд╛рдпрдХ рдпреЛрдЬрдирд╛рдУрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдиреЗрдВ рдпрд╛ рдХреЛрдИ рднреА рдкреНрд░рд╢реНрди рдкреВрдЫреЗрдВ"
    }
  ]
};

const container = {
  hidden: { opacity: 0 },
  show: {
    opacity: 1,
    transition: {
      staggerChildren: 0.1
    }
  }
};

const item = {
  hidden: { y: 20, opacity: 0 },
  show: { y: 0, opacity: 1 }
};

const Home = () => {
  const navigate = useNavigate();
  const { preferences } = useUserPreferences();
  const currentMenuItems = menuItems[preferences.language];

  useEffect(() => {
    // Show a welcome toast with helpful instruction
    const welcomeMessage = preferences.language === 'english' 
      ? {
          title: "Welcome to Senior Connect! ЁЯСЛ",
          description: "Tap any of the colorful cards below to get started. They're all designed to be easy to use."
        }
      : {
          title: "рд╕реАрдирд┐рдпрд░ рдХрдиреЗрдХреНрдЯ рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! ЁЯСЛ",
          description: "рд╢реБрд░реВ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдиреАрдЪреЗ рджрд┐рдП рдЧрдП рдХрд┐рд╕реА рднреА рд░рдВрдЧреАрди рдХрд╛рд░реНрдб рдкрд░ рдЯреИрдк рдХрд░реЗрдВред рдпреЗ рд╕рднреА рдЙрдкрдпреЛрдЧ рдореЗрдВ рдЖрд╕рд╛рди рд╣реИрдВред"
        };
    
    toast(welcomeMessage);
  }, [preferences.language]);

  return (
    <div className="min-h-screen bg-gradient-to-br from-primary/50 to-background p-4 md:p-6">
      <div className="max-w-4xl mx-auto space-y-8">
        <motion.div 
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-center space-y-2"
        >
          <h1 className="text-4xl md:text-5xl font-rozha text-accent mb-2 bg-clip-text text-transparent bg-gradient-to-r from-accent to-accent/70">
            {preferences.language === 'english' ? 'Welcome' : 'рд╕реНрд╡рд╛рдЧрдд рд╣реИ'}, {preferences.userName}
          </h1>
          <p className="text-xl text-muted-foreground">
            {preferences.language === 'english' 
              ? "What would you like to do today?" 
              : "рдЖрдЬ рдЖрдк рдХреНрдпрд╛ рдХрд░рдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?"}
          </p>
        </motion.div>

        <motion.div 
          variants={container}
          initial="hidden"
          animate="show"
          className="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8"
        >
          {currentMenuItems.map((menuItem, index) => (
            <motion.div
              key={menuItem.path}
              variants={item}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              onHoverStart={() => {
                toast({
                  title: menuItem.tooltip,
                  duration: 2000,
                });
              }}
            >
              <Card
                className={`p-8 cursor-pointer bg-gradient-to-br ${menuItem.gradient} hover:shadow-lg transition-all duration-300 border-none`}
                onClick={() => navigate(menuItem.path)}
              >
                <div className="flex items-center gap-6 text-white">
                  <div className="p-4 bg-white/20 rounded-full">
                    <menuItem.Icon className="w-10 h-10" />
                  </div>
                  <div>
                    <h2 className="text-2xl font-rozha mb-2">{menuItem.title}</h2>
                    <p className="text-lg opacity-90">{menuItem.description}</p>
                  </div>
                </div>
              </Card>
            </motion.div>
          ))}
        </motion.div>
      </div>
    </div>
  );
};

export default Home;