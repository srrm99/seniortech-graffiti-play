import { useNavigate } from 'react-router-dom';
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { useUserPreferences } from '@/contexts/UserPreferencesContext';
import { Sun, Moon, Trophy, Star } from 'lucide-react';
import { useState, useEffect } from 'react';
import { toast } from "@/components/ui/use-toast";

const quotes = {
  english: [
    "Age is just a number, but wisdom is a choice.",
    "Every day is a new opportunity to learn and grow.",
    "The best way to predict the future is to create it.",
    "Life begins at the end of your comfort zone.",
  ],
  hindi: [
    "рдЙрдореНрд░ рдПрдХ рд╕рдВрдЦреНрдпрд╛ рд╣реИ, рд▓реЗрдХрд┐рди рдЬреНрдЮрд╛рди рдПрдХ рд╡рд┐рдХрд▓реНрдк рд╣реИред",
    "рд╣рд░ рджрд┐рди рд╕реАрдЦрдиреЗ рдФрд░ рдмрдврд╝рдиреЗ рдХрд╛ рдПрдХ рдирдпрд╛ рдЕрд╡рд╕рд░ рд╣реИред",
    "рднрд╡рд┐рд╖реНрдп рдХреА рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдХрд░рдиреЗ рдХрд╛ рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ рддрд░реАрдХрд╛ рд╣реИ рдЗрд╕реЗ рдмрдирд╛рдирд╛ред",
    "рдЬреАрд╡рди рдЖрдкрдХреЗ рдЖрд░рд╛рдо рдХреНрд╖реЗрддреНрд░ рдХреЗ рдЕрдВрдд рдореЗрдВ рд╢реБрд░реВ рд╣реЛрддрд╛ рд╣реИред",
  ]
};

const labels = {
  english: {
    welcome: "Senior Connect",
    enterName: "Enter your name",
    save: "Save",
    achievements: "Achievements",
    firstSteps: "First Steps: Complete your profile",
    gameMaster: "Game Master: Win 5 games",
    dailyReader: "Daily Reader: Read 7 days in a row",
    selectLanguage: "Select Your Language"
  },
  hindi: {
    welcome: "рд╡рд░рд┐рд╖реНрда рдХрдиреЗрдХреНрдЯ",
    enterName: "рдЕрдкрдирд╛ рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВ",
    save: "рд╕рд╣реЗрдЬреЗрдВ",
    achievements: "рдЙрдкрд▓рдмреНрдзрд┐рдпрд╛рдВ",
    firstSteps: "рдкрд╣рд▓реЗ рдХрджрдо: рдкреНрд░реЛрдлрд╝рд╛рдЗрд▓ рдкреВрд░рд╛ рдХрд░реЗрдВ",
    gameMaster: "рдЧреЗрдо рдорд╛рд╕реНрдЯрд░: 5 рдЦреЗрд▓ рдЬреАрддреЗрдВ",
    dailyReader: "рджреИрдирд┐рдХ рдкрд╛рдардХ: рд▓рдЧрд╛рддрд╛рд░ 7 рджрд┐рди рдкрдврд╝реЗрдВ",
    selectLanguage: "рдЕрдкрдиреА рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ"
  }
};

const LanguageSelection = () => {
  const navigate = useNavigate();
  const { preferences, updateUserName, toggleTheme, setLanguage } = useUserPreferences();
  const [name, setName] = useState(preferences.userName);
  const [dailyQuote, setDailyQuote] = useState('');
  const currentLabels = labels[preferences.language];

  useEffect(() => {
    const quoteList = quotes[preferences.language];
    const randomQuote = quoteList[Math.floor(Math.random() * quoteList.length)];
    setDailyQuote(randomQuote);
  }, [preferences.language]);

  const handleNameSubmit = () => {
    updateUserName(name);
    const successMessage = preferences.language === 'hindi' 
      ? "рд╕реНрд╡рд╛рдЧрдд рд╣реИ!" 
      : "Welcome!";
    const description = preferences.language === 'hindi'
      ? `рдмрд╣реБрдд рдЕрдЪреНрдЫрд╛ рд╣реИ рдХреА рдЖрдк рдпрд╣рд╛рдБ рд╣реИрдВ, ${name}!`
      : `Great to have you here, ${name}!`;
    
    toast({
      title: successMessage,
      description: description,
    });
  };

  const handleLanguageSelect = (language: 'english' | 'hindi') => {
    setLanguage(language);
    if (!preferences.userName) {
      const achievementTitle = language === 'hindi' 
        ? "рдЙрдкрд▓рдмреНрдзрд┐ рдЕрдирд▓реЙрдХ! ЁЯПЖ" 
        : "Achievement Unlocked! ЁЯПЖ";
      const achievementDesc = language === 'hindi'
        ? "рдкрд╣рд▓реЗ рдХрджрдо: рдЖрдкрдХрд╛ рдкреНрд░реЛрдлрд╝рд╛рдЗрд▓ рд╕реЗрдЯрдЕрдк рдкреВрд░рд╛ рд╣реЛ рдЧрдпрд╛!"
        : "First Steps: Completed your profile setup!";
      
      toast({
        title: achievementTitle,
        description: achievementDesc,
      });
    }
    navigate('/home');
  };

  return (
    <div className="min-h-screen bg-background p-6 space-y-8">
      <div className="max-w-xl mx-auto space-y-8">
        <div className="flex justify-end">
          {preferences.theme === 'light' ? (
            <Sun className="w-8 h-8 text-yellow-500 cursor-pointer" onClick={toggleTheme} />
          ) : (
            <Moon className="w-8 h-8 text-blue-300 cursor-pointer" onClick={toggleTheme} />
          )}
        </div>

        <div className="text-center space-y-4">
          <h1 className="text-4xl font-rozha text-accent">{currentLabels.welcome}</h1>
          <div className="mehndi-border">
            <p className="text-xl text-muted-foreground italic">{dailyQuote}</p>
          </div>
        </div>

        <Card className="p-6 space-y-4 bg-white/80 backdrop-blur">
          <h2 className="text-2xl font-rozha text-accent">{currentLabels.welcome}</h2>
          <div className="flex gap-2">
            <Input
              placeholder={currentLabels.enterName}
              value={name}
              onChange={(e) => setName(e.target.value)}
              className="max-w-[200px]"
            />
            <Button onClick={handleNameSubmit}>{currentLabels.save}</Button>
          </div>
        </Card>

        <Card className="p-6 bg-white/80 backdrop-blur">
          <div className="flex items-center gap-2 mb-4">
            <Trophy className="w-6 h-6 text-yellow-500" />
            <h2 className="text-2xl font-rozha text-accent">{currentLabels.achievements}</h2>
          </div>
          <div className="space-y-2">
            <div className="flex items-center gap-2">
              <Star className="w-5 h-5 text-yellow-500" />
              <p>{currentLabels.firstSteps}</p>
            </div>
            <div className="flex items-center gap-2">
              <Star className="w-5 h-5 text-gray-300" />
              <p>{currentLabels.gameMaster}</p>
            </div>
            <div className="flex items-center gap-2">
              <Star className="w-5 h-5 text-gray-300" />
              <p>{currentLabels.dailyReader}</p>
            </div>
          </div>
        </Card>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <Button 
            className="p-6 text-xl hover:scale-105 transition-transform"
            onClick={() => handleLanguageSelect('english')}
          >
            English
          </Button>
          <Button 
            className="p-6 text-xl hover:scale-105 transition-transform"
            onClick={() => handleLanguageSelect('hindi')}
          >
            рд╣рд┐рдВрджреА
          </Button>
        </div>
      </div>
    </div>
  );
};

export default LanguageSelection;